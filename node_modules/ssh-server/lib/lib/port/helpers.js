"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.genForwardSocket = exports.parseForwardPattern = void 0;
const path = require("path");
function parseForwardPattern(config, payload) {
    const secs = payload.split(":");
    const r = {
        localAddress: "localhost",
        localPort: parseInt(secs[0]),
        localStr: "localhost:" + parseInt(secs[0]),
        remoteAddress: config.host,
        remotePort: parseInt(secs[1]),
        remoteStr: `${config.host}:${parseInt(secs[1])}`,
    };
    if (isNaN(r.localPort) || isNaN(r.remotePort)) {
        throw new Error(`failed to parse forward pattern '${payload}'`);
    }
    return r;
}
exports.parseForwardPattern = parseForwardPattern;
function genForwardSocket(configDir, fw) {
    return path.join(configDir, "socket", `${fw.localAddress}-${fw.localPort}-${fw.remoteAddress}-${fw.remotePort}`);
}
exports.genForwardSocket = genForwardSocket;
//# sourceMappingURL=helpers.js.map