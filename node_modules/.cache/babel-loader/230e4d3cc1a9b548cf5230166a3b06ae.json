{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={cartItems:[],totalQuantity:0,totalAmount:0};var cartSlice=createSlice({name:\"cart\",initialState:initialState,reducers:{addItem:function addItem(state,action){var newItem=action.payload;var existingItem=state.cartItems.find(function(item){return item.id===newItem.id;});state.totalQuantity++;if(!existingItem){/*\r\n            ========== if you just redux you should not mute state array instead of clone the \r\n            state array, but if you use toolkit that will not a problem because \r\n            redux toolkit clone the array behind the scene\r\n        \r\n        */state.cartItems.push({id:newItem.id,title:newItem.title,image01:newItem.image01,price:newItem.price,quantity:1,totalPrice:newItem.price});}else{existingItem.quantity++;existingItem.totalPrice=Number(existingItem.totalPrice)+Number(newItem.price);}state.totalAmount=state.cartItems.reduce(function(total,item){return total+Number(item.price)*Number(item.quantity);},// initial value should be 0\n0);},// ============== remove item =============\nremoveItem:function removeItem(state,action){var id=action.payload;var existingItem=state.cartItems.find(function(item){return item.id===id;});state.totalQuantity--;if(existingItem.quantity===1){state.cartItems=state.cartItems.filter(function(item){return item.id!==id;});}else{existingItem.quantity--;existingItem.totalPrice=Number(existingItem.totalPrice)-Number(existingItem.price);}state.totalAmount=state.cartItems.reduce(function(total,item){return total+Number(item.price)*Number(item.quantity);},0);},// ==========delete item========\ndeleteItem:function deleteItem(state,action){var id=action.payload;var existingItem=state.cartItems.find(function(item){return item.id===id;});if(existingItem){state.cartItems=state.cartItems.filter(function(item){return item.id!==id;});state.totalQuantity=state.totalQuantity-existingItem.quantity;}state.totalAmount=state.cartItems.reduce(function(total,item){return total+Number(item.price)*Number(item.quantity);},0);}}});export var cartActions=cartSlice.actions;export default cartSlice;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","removeItem","filter","deleteItem","cartActions","actions"],"sources":["C:/D/my_project/Food-order-delivery/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  totalQuantity: 0,\r\n  totalAmount: 0,\r\n};\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialState,\r\n\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.cartItems.find(\r\n        (item) => item.id === newItem.id\r\n      );\r\n      state.totalQuantity++;\r\n\r\n      if (!existingItem) {\r\n        /*\r\n            ========== if you just redux you should not mute state array instead of clone the \r\n            state array, but if you use toolkit that will not a problem because \r\n            redux toolkit clone the array behind the scene\r\n        \r\n        */\r\n\r\n        state.cartItems.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          image01: newItem.image01,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) + Number(newItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        // initial value should be 0\r\n        0\r\n      );\r\n    },\r\n\r\n    // ============== remove item =============\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) - Number(existingItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n    },\r\n\r\n    // ==========delete item========\r\n    deleteItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}